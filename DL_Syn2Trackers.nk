set cut_paste_input [stack 0]
push $cut_paste_input
NoOp {
name DL_Syn2Trackers1
tile_color 0x9fffff
selected true
xpos -298
ypos 21
addUserKnob {20 version l "DL_Syn2Trackers v01.1"}
addUserKnob {26 ""}
addUserKnob {2 txt_path l txt_path:}
addUserKnob {26 ""}
addUserKnob {3 TimeOffset l "Time Offset (frames)"}
TimeOffset 1
addUserKnob {6 T t Translate +STARTLINE}
T true
addUserKnob {6 R t Rotate -STARTLINE}
addUserKnob {6 S t Scale -STARTLINE}
addUserKnob {20 TrasformSettings l "Transform Settings" n 1}
addUserKnob {4 transform M {none stabilize "stabilize 1-pt" match-move "match-move 1-pt" "remove jitter" "add jitter" "" ""}}
transform match-move
addUserKnob {3 reference_frame l "reference frame"}
reference_frame 1
addUserKnob {7 motionblur R 0 4}
addUserKnob {7 shutter R 0 2}
shutter 0.5
addUserKnob {4 shutteroffset l "shutter offset" M {centred start end custom ""}}
addUserKnob {20 endGroup n -1}
addUserKnob {22 create_trackers l "Create Trackers" T "import threading\nimport time\n\ntry:\n    n = nuke.selectedNode()\n    txtPath = n.knob(\"txt_path\").getValue()\n    print(txtPath)\n    print()\n\n    t_knob = int(n\[\"T\"].getValue())\n    r_knob = int(n\[\"R\"].getValue())\n    s_knob = int(n\[\"S\"].getValue())\n\n    timeOffset = int(n.knob(\"TimeOffset\").getValue())\n\n    # Transform Settings (Initial Setup) // \[Getting values]\n    transform_get = int(n\[\"transform\"].getValue())\n    reference_frame_get = n\[\"reference_frame\"].getValue()\n    motionblur_get = n\[\"motionblur\"].getValue()\n    shutter_get = n\[\"shutter\"].getValue()\n    shutter_offset_get = int(n\[\"shutteroffset\"].getValue())\n\n    if \".txt\" in txtPath:\n        # Manipulating the content of \".txt\" file\n        tracker_dict = \{\}\n        with open(txtPath, \"r\") as txtFile:\n            tracker_index = \"\"\n            tracker_list = \[]\n            for line in txtFile:\n                tracker_data = line.strip().split(' ')\n                if (len(tracker_data) == 1):\n                    if (len(tracker_list) > 0):\n                        tracker_dict\[tracker_index] = tracker_list\[:]\n                        del tracker_list\[:]\n                    tracker_index = tracker_data\[0]\n                    continue\n                else:\n                    tracker_list.append(tracker_data)\n\n        if (len(tracker_list) > 0):\n            tracker_dict\[tracker_index] = tracker_list\[:]\n            del tracker_list\n            del tracker_index\n\n        tracker_dict = sorted(tracker_dict.items())\n\n        # Printing all Keys and Values separately from Dictionary \n        count = 0\n        for key in tracker_dict:\n            print(key)\n            count += 1\n            print()\n\n        # Creating a Tracker node, selecting him, and accessing the \"tracks\" knob\n        dl_tracker = nuke.createNode(\"Tracker4\")\n        dl_tracker.knob(\"selected\").setValue(\"True\")\n        n = nuke.selectedNode()\n\n        # Transform Settings (Initial Setup) // \[Setting values]\n        transform_set = n\[\"transform\"].setValue(transform_get)\n        reference_frame_set = n\[\"reference_frame\"].setValue(reference_frame_get)\n        motionblur_set = n\[\"motionblur\"].setValue(motionblur_get)\n        shutter_set = n\[\"shutter\"].setValue(shutter_get)\n        shutter_offset_set = n\[\"shutteroffset\"].setValue(shutter_offset_get)\n\n        tracks = n\[\"tracks\"]\n        columns = 31\n\n        tracker_id = -1\n        for key, value in tracker_dict:\n            \n            # Starting Progress Bar\n            task = nuke.ProgressTask(\"DL_Syn2Trackers\")\n            task.setMessage(\"Creating Trackers\")\n            time.sleep(0.5)\n            if task.isCancelled():\n                break\n            task.setProgress(20)\n\n            # Creating Trackers inside of Tracker node\n            n\['add_track'].execute()\n            tracker_id += 1\n            print(\"Tracker ID: \" + str(tracker_id))\n            print(key)\n            print()\n\n            for sublist in value:\n\n                # Progress Bar Status\n                task.setProgress(40)\n\n                frame_number = int(sublist\[0]) + timeOffset\n                print(\"Frame number: \" + str(frame_number))\n                tracker_x_value = float(sublist\[1])\n                print(\"X value: \" + str(tracker_x_value))\n                tracker_y_value = float(sublist\[2])\n                print(\"Y value: \" + str(tracker_y_value))\n                print()\n\n                # Getting the \"track_x\" and \"track_y\" values from Tracker\n                track_x_knob = tracker_id * columns + 2\n                track_y_knob = tracker_id * columns + 3\n\n                # Getting the \"Translate/Rotate/Scale\" columns from Tracker\n                t_option = tracker_id * columns + 6\n                r_option = tracker_id * columns + 7\n                s_option = tracker_id * columns + 8\n\n                # Setting a value on \"track_x\" / \"track_y\" \[VALUE, FRAME, KNOB]\n                tracks.setValueAt(tracker_x_value, frame_number, track_x_knob)\n                tracks.setValueAt(tracker_y_value, frame_number, track_y_knob)\n\n                # Setting the \"T/R/S\"\n                if t_knob == 1:\n                    tracks.setValue(1, t_option)\n                else:\n                    tracks.setValue(0, t_option)\n                if r_knob == 1:\n                    tracks.setValue(1, r_option)\n                if s_knob == 1:\n                    tracks.setValue(1, s_option)\n\n                # Progress Bar Status\n                task.setProgress(70)\n\n\n            # Progress Bar Status\n            task.setProgress(100)\n            del task\n        \n    else:\n        nuke.message('Invalid txt file! If you need help, please read the \"How2Use\" tab!')\nexcept:\n    nuke.message(\"Please keep the DL_Syn2Trackers node selected!\")" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 Dev l "" +STARTLINE T "Developed by Danilo de Lucio\nwww.danilodelucio.com\n\nSpecial thanks to Murilo Augusto to helped me\nmanipulate the lists better on Python."}
addUserKnob {20 How2Use}
addUserKnob {26 how2use_info l "" +STARTLINE T "\n1. Export the Trackers from SynthEyes as \".txt\" file (\"AllTrackersPaths\" option);\n\n2. Search your file on \"txt_path\" field;\n\n3. If you prefer, you can set the TimeOffset, or select the boxes \nindicating the Translate, Rotate and Scale, then your Tracker \nnode will be created following these options;\n\n4. Hit \"Create Trackers\", and done!\n\n<<< NOTES >>>\n\nIf your Tracking Data has a bunch of Trackers, probably your Nuke \ncan crash or slow down. For this particular case, I suggest you export the \nTrackers separately (one by one or in few sequences of Trackers).\n\nIf you have Trackers where their lifetime is different from your frame range \nyou are using, will be created a new keyframe on the current frame. \nTo fix that, you can select all Trackers that have this issue (in your Track list), \nand delete the current keyframe in your Dope Sheet. Now (for each Tracker), \nyou need to set your current frame for any point for the animation, \nand checking the box \"e\" to enable it again.\n\nIf you have doubts, please check the video \"DL_Syn2Trackers\" \non my Youtube channel (Danilo de Lucio)."}
}
